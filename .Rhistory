redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+u_tot
+cbg_area, data = cbg_redu)
car::vif(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+u_tot
+cbg_area, data = cbg_redu)
summary(redu1)
hist(cbg_redu$sum_exp15)
hist(log(cbg_redu$sum_exp15))
hist(cbg_redu$sum_exp15)
cbg_redu2 <- subset(cbg_redu, cbg_redu$sum_exp15 < 1500000)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+u_tot
+cbg_area, data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
#+u_tot
+cbg_area, data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
+cbg_area, data = cbg_redu2)
summary(redu1)
car::vif(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+u_tot
+cbg_area, data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
+cbg_area, data = cbg_redu2)
summary(redu1)
car::vif(redu1)
summary(redu1)
car::vif(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
#+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
+cbg_area, data = cbg_redu2)
summary(redu1)
sfmod.redu <- lm(sum_exp15~
+I(2017-yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+cbg_area, data = cbg_redu2)
summary(sfmod.redu)
sfmod.redu <- lm(sum_exp15~
+I(2017-yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+I(count/cbg_area), data = cbg_redu2)
pander(summary(sfmod.redu))
car::vif(sfmod.redu)
sfmod.redu <- lm(sum_exp15~
+I(2017-yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count, data = cbg_redu2)
summary(sfmod.redu)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
+Pop_White
+Pop_Black
+Pop_Hisp, data = cbg_redu2)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
+Pop_White
+Pop_Black
+Pop_Hisp, data = cbg)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
+Pop_White
+Pop_Black
+Pop_Hisp, data = cbg)
redu1 <- lm(sum_exp15~
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
#+u_tot
, data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count,
#+u_tot
data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
#+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count,
#+u_tot
data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count,
#+u_tot
data = cbg_redu2)
summary(redu1)
#cbg_redu <- subset(cbg, cbg$bldgsqft < 5000)
cbg_redu <- cbg
cbg_redu$density <- cbg_redu$count/cbg_redu$cbg_area
cbg_redu2 <- subset(cbg_redu, cbg_redu$sum_exp15 < 1500000)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+Pop_Black
+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu2)
summary(redu1)
car::vif(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
#+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu2)
summary(redu1)
redu1 <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu2)
summary(redu1)
car::vif(redu1)
sfmod.redu <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu2)
summary(sfmod.redu)
sfmod.redu <- lm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu2)
summary(sfmod.redu)
sqrt(mean(sfmod.redu$residuals^2))
AIC(sfmod.redu)
summary(cbg_redu$sum_exp15)
boxplot(cbg_redu$sum_exp15)
boxplot(log(cbg_redu$sum_exp15))
tl_point<-gCentroid(cbg_redu,byid=T)
nb <-  knn2nb(knearneigh(tl_point, k = 5))
nb_lines<-spTransform(nb2lines(nb, proj4string = cbg_redu@proj4string, coords = coordinates(tl_point)), CRS("+proj=longlat +datum=WGS84"))
leaflet() %>% addProviderTiles(providers$OpenStreetMap) %>%
addCircleMarkers(data=spTransform(tl_point,CRS("+proj=longlat +datum=WGS84"))
,weight=2
,color="black"
,fillColor = "grey"
,fillOpacity = 0.15
,opacity= 1
,radius=4) %>%
addPolylines(data=nb_lines,color="red",weight=2)
#Creating Spatial lag and plotting
cbg_redu$resid <- sfmod.redu$residuals
cbg_redu <- subset(cbg_redu, cbg_redu$sum_exp15 < 1500000)
tl_point<-gCentroid(cbg_redu,byid=T)
nb <-  knn2nb(knearneigh(tl_point, k = 5))
nb_lines<-spTransform(nb2lines(nb, proj4string = cbg_redu@proj4string, coords = coordinates(tl_point)), CRS("+proj=longlat +datum=WGS84"))
weights <- nb2listw(nb)
moran.mc(cbg_redu$resid, weights, 999)
weights <- nb2listw(nb)
moran.mc(cbg_redu$resid, weights, 999)
#Creating Spatial lag and plotting
cbg_redu$resid <- sfmod.redu$residuals
resnb <- sapply(nb, function(x) mean(sfmod.redu$residuals[x]))
plot(sfmod.redu$residuals, resnb, xlab ='Residuals', ylab = 'Mean of adjacent residuals')
text(-150,150,paste0("Correlation: ", round(cor(cbg_redu$resid, resnb), 4)), col="red")
plot(sfmod.redu$residuals, resnb, xlab ='Residuals', ylab = 'Mean of adjacent residuals')
text(-150,150,paste0("Correlation: ", round(cor(cbg_redu$resid, resnb), 4)), col="red")
weights <- nb2listw(nb)
moran.mc(cbg_redu$resid, weights, 999)
moran.plot(cbg_redu$resid, weights, main = "Moran's Plot", xlab = "Residuals", ylab = "Spatially Lagged Residuals")
lm.LMtests(sfmod.redu, listw=weights)
sem <- errorsarlm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu, weights)
sem <- errorsarlm(sum_exp15~
+I(2017-yearbuilt)
#+I(bldgsqft*yearbuilt)
+bldgsqft
+gis_acres
+density
+Avg_HHSize
#+H_Units
+MHI
+OOHU
+GT25_GTBA
+Pop_65Over
#+count
+Pop_Black
#+Pop_White
+Pop_Hisp,
#+u_tot
data = cbg_redu, weights)
install.packages("FFTrees")
# Load the package
library("FFTrees")
head(heart.train)
head(heart.test)
dim(heart.train)
dim(heart.test)
names(heart.test)
heart_FFT <- FFTrees(formula = diagnosis ~ .,               # The variable we are predicting
data = heart.train,                    # Training data
data.test = heart.test,                # Testing data
main = "ER Decisions",                # Main label
decision.labels = c("Stable", "H Attack")) # Label for decisions
heart_FFT
# Visualise the tree applied to the test data heart.test
plot(heart_FFT,
data = "test")
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/home/atrusty/alectrusty.github.io/")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/home/atrusty/alectrusty.github.io/")
#render your sweet site.
rmarkdown::render_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::install_hugo(force = TRUE, version = "latest")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
